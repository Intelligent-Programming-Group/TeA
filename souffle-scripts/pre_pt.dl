// generate flow-insensitive & path-insensitive facts
.type M <: unsigned
.type P <: unsigned
.type E <: unsigned
.type V <: unsigned
.type I <: unsigned
.type Z <: unsigned

.decl MPentry(m:M,p:P)
.input MPentry
.decl PPdirect(p:P,q:P)
.input PPdirect
.decl PPtrue(p:P,q:P,v:V)
.input PPtrue
.decl PPfalse(p:P,q:P,v:V)
.input PPfalse

.decl MmethArg(m:M,z:Z,v:V)
.input MmethArg
.decl MmethRet(m:M,v:V)
.input MmethRet

.decl Peval(p:P,v:V,e:E)
.input Peval
.decl Pload(p:P,v:V)
.input Pload
.decl Pstore(p:P,v:V)
.input Pstore
.decl Palloc(p:P,v:V)
.input Palloc
.decl Pinvk(p:P,i:I)
.input Pinvk

.decl IinvkArg(i:I,z:Z,v:V)
.input IinvkArg
.decl IinvkRet(i:I,v:V)
.input IinvkRet

.decl MP(m:M,p:P)
.output MP
.decl MI(m:M,i:I)
.output MI
.decl MV(m:M,v:V)
.output MV

MP(m,p) :- MPentry(m,p).
MP(m,q) :- MP(m,p), PPdirect(p,q).
MP(m,q) :- MP(m,p), PPtrue(p,q,_).
MP(m,q) :- MP(m,p), PPfalse(p,q,_).

MI(m,i) :- MP(m,p), Pinvk(p,i).

MV(m,v) :- MP(m,p), Peval(p,v,_).
MV(m,v) :- MP(m,p), Pload(p,v).
MV(m,v) :- MP(m,p), Pstore(p,v).
MV(m,v) :- MP(m,p), Palloc(p,v).

MV(m,v) :- MmethArg(m,_,v).
MV(m,v) :- MmethRet(m,v).

MV(m,v) :- MI(m,i), IinvkArg(i,_,v).
MV(m,v) :- MI(m,i), IinvkRet(i,v).