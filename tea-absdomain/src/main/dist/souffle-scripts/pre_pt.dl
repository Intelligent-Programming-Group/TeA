// generate flow-insensitive & path-insensitive facts
.type M <: unsigned
.type P <: unsigned
.type V <: unsigned
.type Z <: unsigned
.type C <: unsigned

.decl MPentry(m:M,p:P)
.input MPentry
.decl PPdirect(p:P,q:P)
.input PPdirect
.decl PPtrue(p:P,q:P,v:V)
.input PPtrue
.decl PPfalse(p:P,q:P,v:V)
.input PPfalse
.decl PPmatch(p:P,q:P,v:V,c:C)
.input PPmatch

.decl MmethArg(m:M,z:Z,v:V)
.input MmethArg
.decl MmethRet(m:M,v:V)
.input MmethRet

.decl Peval(p:P,v:V)
.input Peval
.decl Pload(p:P,v:V)
.input Pload
.decl Palloca(p:P,v:V)
.input Palloca
.decl IinvkRet(p:P, v:V)
.input IinvkRet

.decl MP(m:M,p:P)
.output MP
.decl MV(m:M,v:V)
.output MV

MP(m,p) :- MPentry(m,p).
MP(m,q) :- MP(m,p), PPdirect(p,q).
MP(m,q) :- MP(m,p), PPtrue(p,q,_).
MP(m,q) :- MP(m,p), PPfalse(p,q,_).
MP(m,q) :- MP(m,p), PPmatch(p,q,_,_).

MV(m,v) :- MP(m,p), Peval(p,v).
MV(m,v) :- MP(m,p), Pload(p,v).
MV(m,v) :- MP(m,p), Palloca(p,v).

MV(m,v) :- MmethArg(m,_,v).
MV(m,v) :- MP(m, p), IinvkRet(p,v).