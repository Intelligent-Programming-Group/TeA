.type V <: unsigned
.type H <: unsigned
.type P <: unsigned
.type U <: unsigned
.type T <: unsigned
.type C <: unsigned

.decl ci_pt(v:V, h:H)
.input ci_pt

.decl Pload(p:P,v:V)
.input Pload
.decl Pstore(p:P,v:V)
.input Pstore
.decl LoadPtr(u:V,v:V)
.input LoadPtr
.decl StorePtr(u:V,v:V)
.input StorePtr

.decl ci_Vval(v:V,val:U)
.input ci_Vval
.decl ci_Voffset(v:V,content:H,type:T,offset:U)
.input ci_Voffset

.decl TypeWidth(type:T,width:C)
.input TypeWidth
.decl FixArrayShape(content:H,t:T,l:C)
.input FixArrayShape
.decl VarArrayShape(content:H,t:T,l:V)
.input VarArrayShape
.decl ConstU(c:C,u:U)
.input ConstU
.decl evalPlusU(o1:U,o2:U,o:U)
.input evalPlusU
.decl evalMultU(o1:U,o2:U,o:U)
.input evalMultU
.decl evalLEU(o1:U,o2:U)
.input evalLEU
.decl HeapArrayContent(array:H,content:H)
.input HeapArrayContent

.decl CWE119_out_of_bound(p:P, v:V, array:H)
.output CWE119_out_of_bound

CWE119_out_of_bound(p,v,array) :-
    AccessArrayOffset(p,v,content,t,o),
    TypeWidth(t,c), ConstU(c,w), evalMultU(o,w,offset),
    ArrayLength(content,bound), evalLEU(bound,offset),
    HeapArrayContent(array,content).

.decl AccessArrayOffset(p:P,v:V,content:H,t:T,o:U)
AccessArrayOffset(p,v,content,t,o) :-
    Pstore(p,u), StorePtr(v,u), ci_Voffset(v,content,t,o).
AccessArrayOffset(p,v,content,t,o) :-
    Pload(p,u), LoadPtr(u,v), ci_Voffset(v,content,t,o).

.decl ArrayLength(content:H,bound:U)
ArrayLength(content,bound) :-
    FixArrayShape(content,t2,c), ConstU(c,b),
    TypeWidth(t2,w2), ConstU(w2,wu2), evalMultU(b,wu2,bound).

ArrayLength(content,bound) :-
    VarArrayShape(content,t2,n), ci_Vval(n,b),
    TypeWidth(t2,w2), ConstU(w2,wu2), evalMultU(b,wu2,bound).